<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd 
						http://www.springframework.org/schema/task 
						http://www.springframework.org/schema/task/spring-task-3.2.xsd 
						http://www.springframework.org/schema/aop  
       					http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       					http://www.springframework.org/schema/tx  
       					http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
       					http://www.springframework.org/schema/mvc 
       					http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       					http://www.springframework.org/schema/security 
       					http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- 
		hasRole([role])	返回 true 如果当前主体拥有特定角色。 
		hasAnyRole([role1,role2])	返回 true 如果当前主体拥有任何一个提供的角色 （使用逗号分隔的字符串队列） 
		principal	允许直接访问主体对象，表示当前用户 
		authentication	允许直接访问当前 Authentication对象 从SecurityContext中获得 
		permitAll	一直返回true 
		denyAll	一直返回false 
		isAnonymous()	如果用户是一个匿名登录的用户 就会返回 true 
		isRememberMe()	如果用户是通过remember-me 登录的用户 就会返回 true 
		isAuthenticated()	如果用户不是匿名用户就会返回true 
		isFullyAuthenticated()	如果用户不是通过匿名也不是通过remember-me登录的用户时， 就会返回true
	 -->

	<!-- Spring-Security 的配置 -->
	<!-- 注意开启use-expressions.表示开启表达式 -->
	<security:http auto-config="true" use-expressions="true"
		access-denied-page="/user/fail">
		<security:intercept-url pattern="/fe/**,/user/login" access="permitAll"/>	
		<security:intercept-url pattern="/user/common" access="hasRole('USER')"/>	
		<security:intercept-url pattern="/user/admin" access="hasRole('ADMIN')"/>	
		<security:logout logout-success-url="/user/logout" /> <!-- /j_spring_security_logout -->
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder ref="passwordEncoder">
				<security:salt-source user-property="salt"/>
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="account" class="org.market.webproj.bean.Account" />
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<bean id="customUserDetailsService" class="org.market.webproj.util.CustomUserDetailsService" />
	
	
	<!-- <security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="dj" password="dj" authorities="USER" />
				<security:user name="admin" password="admin" authorities="ADMIN" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> -->
	
	
	
	
</beans>